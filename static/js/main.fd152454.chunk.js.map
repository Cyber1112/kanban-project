{"version":3,"sources":["components/Task.js","components/AllTasks.js","data/data.js","components/information/DrgDrpContext.js","components/Form.js","components/AddTask.js","components/Column.js","components/Body/Body.js","components/Footer/Footer.js","components/Header/images/user.svg","components/Header/Header.js","App.js","index.js"],"names":["Task","React","memo","task","index","draggableId","id","provided","snapshot","className","draggableProps","dragHandleProps","ref","innerRef","content","AllTasks","tasks","useEffect","map","dataMock","columns","title","tasksOrder","isEditing","columnsOrder","DrgDrpContext","createContext","DragDropProvider","children","useState","state","setState","Provider","value","onDragEnd","result","destination","source","droppableId","startColumn","endColumn","newStartTasksOrder","newEndTasksOrder","splice","newStartColumn","newEndColumn","newState","column","newTasksOrder","newColumn","newColumns","addData","columnId","newTask","e","tasksLength","Object","keys","length","newTaskId","taskContent","push","handleEditing","endEditing","Form","useContext","useRef","autoFocus","type","placeholder","val","defaultValue","minLength","maxLength","onClick","alert","AddTask","Column","droppableProps","style","background","isDraggingOver","overflow","Body","taskId","Footer","console","log","Header","clicked","setClicked","menuHandler","src","user","alt","display","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd152454.chunk.js","sourcesContent":["import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst Task = React.memo(({ task, index }) => {\n  \n  return (\n    <Draggable draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <div\n          className=\"list-item\"\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          {task.content}\n        </div>\n      )}\n    </Draggable>\n  );\n});\n\nexport default Task;","import React, { useEffect } from \"react\";\nimport Task from \"./Task\";\n\nconst AllTasks = React.memo(({ tasks }) => {\n  useEffect(() => {}, [tasks]);\n  return tasks.map((task, index) => (\n    <Task key={task.id} task={task} index={index} />\n  ));\n});\n\nexport default AllTasks;","const dataMock = {\n  tasks: {\n    \"task-1\": { id: \"task-1\", content: \"Login page – performance issues\" },\n    \"task-2\": { id: \"task-2\", content: \"Sprint bugfix\" },\n    \"task-3\": { id: \"task-3\", content: \"Shop page – performance issues\" },\n    \"task-4\": { id: \"task-4\", content: \"Checkout bugfix\" },\n    \"task-5\": { id: \"task-5\", content: \"Shop bug1\" },\n    \"task-6\": { id: \"task-6\", content: \"Shop bug2\" },\n    \"task-7\": { id: \"task-7\", content: \"Shop bug3\" },\n    \"task-8\": { id: \"task-8\", content: \"Shop bug4\" },\n    \"task-9\": { id: \"task-9\", content: \"Shop bug5\" },\n    \"task-10\": { id: \"task-10\", content: \"User page – performance issues\" },\n    \"task-11\": { id: \"task-11\", content: \"Auth bugfix\" },\n    \"task-12\": { id: \"task-12\", content: \"Main page – performance issues\" },\n    \"task-13\": { id: \"task-13\", content: \"Main page bugfix\" },\n  },\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"Backlog\",\n      tasksOrder: [\"task-1\", \"task-2\"],\n      isEditing: false,\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"Planning\",\n      tasksOrder: [\"task-3\", \"task-4\", \"task-5\", \"task-6\", \"task-7\", \"task-8\", \"task-9\"],\n      isEditing: false,\n    },\n    \"column-3\": {\n      id: \"column-3\",\n      title: \"Doing\",\n      tasksOrder: [\"task-10\", \"task-11\"],\n      isEditing: false,\n    },\n    \"column-4\": {\n      id: \"column-4\",\n      title: \"Done\",\n      tasksOrder: [\"task-12\", \"task-13\"],\n      isEditing: false,\n    },\n  },\n  columnsOrder: [\"column-1\", \"column-2\", \"column-3\", \"column-4\"],\n};\n\nexport default dataMock;","import React, { useState } from \"react\";\nimport dataMock from \"../../data/data\";\n\n\nconst DrgDrpContext = React.createContext();\n\nconst DragDropProvider = ({ children }) => {\n  let [state, setState] = useState(dataMock);\n\n  const handleEditing = (columnId) => {\n    const column = state.columns[columnId];\n    column.isEditing = true;\n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns, \n        [column.id]: {\n          ...column,\n        },\n      },\n    };\n\n    setState(newState);\n  };\n\n  const endEditing = (columnId) => {\n    const column = state.columns[columnId];\n    column.isEditing = false;\n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [column.id]: {\n          ...column,\n        },\n      },\n    };\n\n    setState(newState);\n  };\n\n\n  const addData = (columnId, newTask, e) => {\n    const column = state.columns[columnId];\n    //adding new tasks\n    const tasks = state.tasks;\n    const tasksLength = Object.keys(tasks).length;\n    const newTaskId = `task-${tasksLength + 1}`;\n    const taskContent = { id: newTaskId, content: newTask };\n\n    tasks[newTaskId] = taskContent;\n    // adding the new task id to the column object\n    const newTasksOrder = [...column.tasksOrder];\n    newTasksOrder.push(newTaskId);\n\n    const newColumn = {\n      ...column,\n      tasksOrder: newTasksOrder,\n    };\n\n    const newState = {\n      ...state,\n      tasks,\n      columns: {\n        ...state.columns,\n        [column.id]: {\n          ...newColumn,\n        },\n      },\n    };\n\n    setState(newState);\n  };\n\n  // handling the dragend method on DragDropContext\n  const onDragEnd = (result) => {\n    const { draggableId, destination, source } = result;\n\n    // avoid dropping on an a invalid drop area\n    if (!destination) {\n      return;\n    }\n\n    // avoid dropping on the original place\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = state.columns[source.droppableId];\n    const end = state.columns[destination.droppableId];\n    //reordering tasks in the same column\n    if (start === end) {\n      const column = state.columns[source.droppableId];\n      const newTasksOrder = [...column.tasksOrder];\n\n      newTasksOrder.splice(source.index, 1);\n      newTasksOrder.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...column,\n        tasksOrder: newTasksOrder,\n      };\n\n      const newColumns = {\n        ...state.columns,\n        [column.id]: {\n          ...newColumn,\n        },\n      };\n\n      const newState = {\n        ...state,\n        columns: newColumns,\n      };\n      setState(newState);\n      return;\n    }\n\n    const startColumn = state.columns[source.droppableId];\n    const endColumn = state.columns[destination.droppableId];\n\n    const newStartTasksOrder = [...startColumn.tasksOrder];\n    const newEndTasksOrder = [...endColumn.tasksOrder];\n\n    newStartTasksOrder.splice(source.index, 1);\n    newEndTasksOrder.splice(destination.index, 0, draggableId);\n\n    const newStartColumn = {\n      ...startColumn,\n      tasksOrder: newStartTasksOrder,\n    };\n\n    const newEndColumn = {\n      ...endColumn,\n      tasksOrder: newEndTasksOrder,\n    };\n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [startColumn.id]: {\n          ...newStartColumn,\n        },\n        [endColumn.id]: {\n          ...newEndColumn,\n        },\n      },\n    };\n    setState(newState);\n  };\n\n  return (\n    <DrgDrpContext.Provider\n      value={{\n        state,\n        onDragEnd,\n        addData,\n        handleEditing,\n        endEditing,\n      }}\n    >\n      {children}\n    </DrgDrpContext.Provider>\n  );\n};\n\nexport { DragDropProvider };\n\nexport default DrgDrpContext;","import React, { useContext, useRef } from \"react\";\nimport DrgDrpContext from \"./information/DrgDrpContext\";\n\nconst Form = ({ columnId }) => {\n  const { addData, endEditing } = useContext(DrgDrpContext);\n  let newTask = useRef(null);\n  const handleAddClick = () => {\n    endEditing(columnId);\n    if (newTask.value === \"\") {\n      alert(\"Task cannot be empty!\");\n    } else {\n      addData(columnId, newTask.value);\n    }\n  };\n\n  return (\n    <form className=\"form-submit-content\">\n      <input\n        autoFocus\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Write a task here\"\n        ref={(val) => (newTask = val)}\n        defaultValue=\"\"\n        minLength=\"2\"\n        maxLength=\"60\"\n      />\n      <button\n        type=\"button\"\n        className=\"button-submit\"\n        onClick={handleAddClick}\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default Form;","import React, { useContext } from \"react\";\nimport Form from \"./Form\";\nimport { IoIosAdd } from \"react-icons/io\";\nimport DrgDrpContext from \"./information/DrgDrpContext\";\n\nconst AddTask = ({ columnId, isEditing }) => {\n  const { handleEditing } = useContext(DrgDrpContext);\n  if (isEditing) {\n    return <Form columnId={columnId} />;\n  } else {\n    return (\n      <div className=\"add-card_button\">\n        <IoIosAdd\n          onClick={() => handleEditing(columnId)}\n          className=\"add-card_button-icon\"\n        />\n        <p className=\"add-card_text\">Add Card</p>\n      </div>\n    );\n  }\n};\n\nexport default AddTask;","import React from \"react\";\nimport AllTasks from \"./AllTasks\";\nimport AddTask from \"./AddTask\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nconst Column = React.memo(({ tasks, column, isEditing }) => {\n  return (\n    <div className=\"column is-marginless\">\n      <div className=\"card card-radius \">\n        \n        <div className=\"card-content\">\n        <p className=\"title-board_name\">{column.title}</p>\n          <Droppable droppableId={column.id}>\n            {(provided, snapshot) => (\n              <div\n                className=\"list is-hoverable\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                style={{\n                  background: snapshot.isDraggingOver\n                    ? \"lightblue\"\n                    : \"\",\n                  overflow: \"scroll\"\n                }}\n              >\n                <AllTasks tasks={tasks} />\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n        <AddTask columnId={column.id} isEditing={isEditing} />\n      </div>\n    </div>\n  );\n});\n\nexport default Column;","import React from \"react\";\nimport Column from \"../Column\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nconst Body = ({state, onDragEnd}) => {\n\n  return (\n    <div className=\"body-container_content\">\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className=\"container bg-blue\">\n          <div className=\"columns is-multiline is-mobile\">\n            {state.columnsOrder.map((columnId, index) => {\n              const column = state.columns[columnId];\n              const isEditing = column.isEditing;\n              const task = column.tasksOrder.map(\n                (taskId) => state.tasks[taskId]\n              );\n              return (\n                <Column\n                  key={column.id}\n                  tasks={task}\n                  index={index}\n                  column={column}\n                  isEditing={isEditing}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </DragDropContext>\n    </div>\n  );\n};\nexport default Body;\n","import React, {useEffect} from 'react'\n\n\nconst Footer = ({state}) => {\n  useEffect(() => {\n    console.log(state.columns['column-4'].tasksOrder.length)\n  }, [state])\n  \n  \n  return(\n    <div className=\"footer-container_content\">\n      <div className=\"footer-container_info\">\n        <h3>Acive Tasks: {state.columns['column-1'].tasksOrder.length} </h3>\n        <h3>Finished Tasks: {state.columns['column-4'].tasksOrder.length}</h3>\n      </div>\n      <div className=\"footer-container_author\">\n        <h3>Kanban board by Khakim Zhumagaliyev</h3>\n      </div>\n    </div>\n  )\n}\nexport default Footer;","export default __webpack_public_path__ + \"static/media/user.ba55084e.svg\";","import React, { useState } from \"react\";\nimport user from \"./images/user.svg\";\nconst Header = () => {\n  const [clicked, setClicked] = useState(false);\n\n  const menuHandler = () => {\n    if (clicked) setClicked(false);\n    else setClicked(true);\n  };\n  return (\n    <div className=\"header-container_content\">\n      <h1>Awesome Kanban Board</h1>\n      <div className=\"header-container_information\">\n        <div className=\"header-container_user\">\n          <img\n            onClick={menuHandler}\n            className=\"header-container_user-image\"\n            src={user}\n            alt=\"Not found\"\n          />\n          <button\n            onClick={menuHandler}\n            className={`${clicked ? \"up\" : \"down\"}`}\n          />\n        </div>\n        <div\n          className=\"header-container_menu\"\n          style={{ display: clicked ? \"block\" : \"none\" }}\n        >\n          <ul className=\"header-container_menu-content\">\n            <li>Profile</li>\n            <li>Log out</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Header;\n","import React, { useContext } from \"react\";\nimport Body from \"./components/Body/Body\";\nimport Footer from \"./components/Footer/Footer\";\nimport Header from \"./components/Header/Header\";\nimport DrgDrpContext from \"./components/information/DrgDrpContext\";\nfunction App() {\n  const { state, onDragEnd } = useContext(DrgDrpContext);\n  return (\n    <div className=\"App\">\n      <Header />\n      <Body state={state} onDragEnd={onDragEnd} />\n      <Footer state={state}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./sass/custom-files.css\"\nimport {DragDropProvider} from './components/information/DrgDrpContext'\nReactDOM.render(\n  <React.StrictMode>\n    <DragDropProvider>\n      <App />\n    </DragDropProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}